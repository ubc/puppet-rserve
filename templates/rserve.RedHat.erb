#!/bin/sh
#
# Rserve init script for Rserve 
#
# chkconfig:  345 20 80 
# description: the init script for Rserve

### BEGIN INIT INFO
# Provides:
# Required-Start:
# Required-Stop:
# Should-Start:
# Should-Stop:
# Default-Start:
# Default-Stop:
# Short-Description:
# Description:
### END INIT INFO

# Source function library.
#. /etc/rc.d/init.d/functions

exec="<%= @rserve_bin %>"
opts="<%= @rserve_opts %>"
prog="Rserve"
tempdir=<%= @rtemp_directory %>
rhome=<%= @r_home %>
#config="<path to major config file>"
PIDFILE=/var/run/rserve.pid
LOGFILE=/var/log/rserve.log
RUNAS=root

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

start() {
    [ -x $exec ] || exit 5
#    [ -f $config ] || exit 6
    echo -n $"Starting $prog: "
    export TEMP=$tempdir
    export R_HOME=$rhome
    local CMD="$exec $opts &> \"$LOGFILE\" & echo \$!"
    su -c "$CMD" $RUNAS > "$PIDFILE"
    # if not running, start it up here, usually something like "daemon $exec"
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    pkill $prog
    # stop it here, often "killproc $prog"
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    # status $prog
    test `ps ax|grep Rserve|wc -l` -eq 2
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        #rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
